//
//  main.cpp
//  牛客
//
//  Created by 改 on 2022/12/26.
//

#include <bits/stdc++.h>

using namespace std;
int p1,p2,p3;
typedef struct node{
    char ch;
    int num;
    struct node *next;
    struct node *pre;
}node,* List;
List l1;
void zengjia1(List sp){
    List st = sp->pre;
    List mp = sp->next;
    if(p3 == 1){//正序
        if(p1==1){
            int cnt = sp->next->num-sp->pre->num-1;
            for(int i=0;i<cnt;i++){
                char gpt = st->ch+1;
                for(int j = 0;j<p2;j++){
                    List news = new node;
                    st->next = news;
                    news->ch=gpt;
                    st = news;
                }
            }
            st->next = sp->next;
        }
        else if(p1==2){
            char tmp = st->ch-32;
            int cnt = sp->next->num-sp->pre->num-1;
            for(int i=0;i<cnt;i++){
                char gpt = tmp+1;
                for(int j = 0;j<p2;j++){
                    List news = new node;
                    st->next = news;
                    news->ch=gpt;
                    st = news;
                }
                tmp = st->ch;
            }
            st->next = sp->next;
        }
        else if (p1==3){
            char tmp = '*';
            int cnt = sp->next->num-sp->pre->num-1;
            for(int i=0;i<cnt;i++){
                for(int j = 0;j<p2;j++){
                    List news = new node;
                    st->next = news;
                    news->ch=tmp;
                    st = news;
                }
            }
            st->next = sp->next;
        }
    }
    else if(p3 == 2){//倒序
        if(p1==1){
            char gpt = mp->ch;
            int cnt = sp->next->num-sp->pre->num-1;
            for(int i=0;i<cnt;i++){
                 gpt = gpt-1;
                for(int j = 0;j<p2;j++){
                    List news = new node;
                    st->next = news;
                    news->ch=gpt;
                    st = news;
                }
            }
            st->next = sp->next;
        }
        else if(p1==2){
            char tmp = mp->ch-32;
            int cnt = sp->next->num-sp->pre->num-1;
            for(int i=0;i<cnt;i++){
                tmp = tmp-1;
                for(int j = 0;j<p2;j++){
                    List news = new node;
                    st->next = news;
                    news->ch=tmp;
                    st = news;
                }
            }
            st->next = sp->next;
        }
        else if (p1==3){
            char tmp = '*';
            int cnt = sp->next->num-sp->pre->num-1;
            for(int i=0;i<cnt;i++){
                for(int j = 0;j<p2;j++){
                    List news = new node;
                    st->next = news;
                    news->ch=tmp;
                    st = news;
                }
            }
            st->next = sp->next;
        }
    }
}

void zengjia2(List sp){
    List st = sp->pre;
    List mp = sp->next;
    if(p3 == 1){//正序
        if(p1==1||p1==2){
            int cnt = sp->next->num-sp->pre->num-1;
            for(int i=0;i<cnt;i++){
                char gpt = st->ch+1;
                for(int j = 0;j<p2;j++){
                    List news = new node;
                    st->next = news;
                    news->ch=gpt;
                    st = news;
                }
            }
            st->next = sp->next;
        }
        else if (p1==3){
            char tmp = '*';
            int cnt = sp->next->num-sp->pre->num-1;
            for(int i=0;i<cnt;i++){
                for(int j = 0;j<p2;j++){
                    List news = new node;
                    st->next = news;
                    news->ch=tmp;
                    st = news;
                }
            }
            st->next = sp->next;
        }
    }
    else if(p3 == 2){//倒序
        if(p1==1||p1==2){
            char gpt = mp->ch;
            int cnt = sp->next->num-sp->pre->num-1;
            for(int i=0;i<cnt;i++){
                 gpt = gpt-1;
                for(int j = 0;j<p2;j++){
                    List news = new node;
                    st->next = news;
                    news->ch=gpt;
                    st = news;
                }
            }
            st->next = sp->next;
        }
        else if (p1==3){
            char tmp = '*';
            int cnt = sp->next->num-sp->pre->num-1;
            for(int i=0;i<cnt;i++){
                for(int j = 0;j<p2;j++){
                    List news = new node;
                    st->next = news;
                    news->ch=tmp;
                    st = news;
                }
            }
            st->next = sp->next;
        }
    }
}
int main() {
    l1 = new node;
    List head = l1;
    cin>>p1>>p2>>p3;
    string s;
    cin>>s;
    int len = s.length();
    for(int i=0;i<len;i++){
        List sp;
        sp = new node;
        sp->next = NULL;
        sp->pre = l1;
        sp->ch=s[i];
        sp->num = s[i];
        l1->next = sp;
        l1 =sp;
    }
    List p = head;
    for(int i=0;i<=len;i++){
        if(p->ch=='-'){
            if((p->pre->ch)>='a'&&(p->pre->ch)<='z'&&p->next->ch>='a'&&p->next->ch<='z'&&((p->pre->ch)!=p->next->ch))
                zengjia1(p);
            else if((p->pre->ch)>='0'&&(p->pre->ch)<='9'&&p->next->ch>='0'&&p->next->ch<='9'&&((p->pre->ch)!=p->next->ch))
                zengjia2(p);
        }

        p=p->next;
    }
    string ptr;
    int cnt = 0;
    while(head){
        ptr[cnt++]=head->ch;
        head = head->next;
    }
    for(int i=0;i<cnt;i++)
        cout<<ptr[i];
    puts("");
    return 0;
}
